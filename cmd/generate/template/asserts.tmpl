// Code generated by oxygen. DO NOT EDIT.

package {{.LCName}}

import "reflect"

// Marshaller is the interface implemented by types that can marshal themselves into valid {{.UCName}}.
type Marshaller interface {
	Marshal{{.UCName}}() ([]byte, error)
}

// IsMarshaller attempts to cast the value to {{.UCName}} Marshaller interface,
// if so, returns a marshal function.
func (e *engine) IsMarshaller(rv reflect.Value) (func() ([]byte, error), bool) {
	if i, ok := rv.Interface().(Marshaller); ok {
		return i.Marshal{{.UCName}}, ok
	}

	return nil, false
}

// Unmarshaler is the interface implemented by types that can unmarshal {{.UCName}} description of themselves.
type Unmarshaler interface {
	Unmarshal{{.UCName}}([]byte) error
}

// IsUnmarshaler attempts to cast the value to {{.UCName}} Unmarshaler interface,
// if so, returns an unmarshal function.
func (e *engine) IsUnmarshaler(rv reflect.Value) (func([]byte) error, bool) {
	if i, ok := rv.Interface().(Unmarshaler); ok {
		return i.Unmarshal{{.UCName}}, ok
	}

	return nil, false
}
